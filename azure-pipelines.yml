# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  tags:
      include:
        - release/*  

pool:
  vmImage: 'windows-latest'

variables:
  project: 'LeaderPivot.Blazor/LeaderPivot.Blazor.csproj'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

# nbgv need a deep clone

- checkout: self
  fetchDepth: 0

# install nbgv tooling

- task: DotNetCoreCLI@2  
  displayName: Install NBGV tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv

# allow nbgv to set the version

- script: nbgv cloud
  displayName: Set Version

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: $(project)


# Add /p:PublicRelease=true so nbgv will not append last commit id to version

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'custom'
    custom: 'pack'
    arguments: '$(project) /p:PublicRelease=true --no-build --include-symbols --include-source -c=Release -o $(build.artifactstagingdirectory)'

- task: AzureKeyVault@2
  name: KeyVaultSecrets
  displayName: Get Nuget API key from Key Vault
  inputs:
    azureSubscription: 'All Azure Services'
    KeyVaultName: 'LeaderAnalyticsVault'
    SecretsFilter: 'nuget-apikey'
    RunAsPreJob: false

- task: PowerShell@2
  displayName: "Push package to nuget.org"
  inputs:
    targetType: 'inline'
    script: 'nuget push $(Build.ArtifactStagingDirectory)\*.nupkg -ApiKey $(nuget-apikey) -Source https://api.nuget.org/v3/index.json'    

- task: NuGetCommand@2
  displayName: 'Push package to leaderanalytics feed'
  inputs:
    command: 'push'
    feedsToUse: 'select'
    vstsFeed: 'LeaderAnalyticsFeed'
    publishVstsFeed: 'LeaderAnalyticsFeed'
